// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way  (in=load, sel=address,
               a=reg0-in, b=reg1-in, c=reg2-in, d=reg3-in, e=reg4-in, f=reg5-in,
               g=reg6-in, h=reg7-in);

    Register  (in=in, load=reg0-in, out=reg0);
    Register  (in=in, load=reg1-in, out=reg1);
    Register  (in=in, load=reg2-in, out=reg2);
    Register  (in=in, load=reg3-in, out=reg3);
    Register  (in=in, load=reg4-in, out=reg4);
    Register  (in=in, load=reg5-in, out=reg5);
    Register  (in=in, load=reg6-in, out=reg6);
    Register  (in=in, load=reg7-in, out=reg7);

    Mux8Way16 (a=reg0, b=reg1, c=reg2, d=reg3, e=reg4, f=reg5, g=reg6, h=reg7,
               sel=address, out=out);
}
